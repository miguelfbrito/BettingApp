# É possivel definir valores fallback/default para as variaveis de environment

http:
  port: 8080
admin:
  port: 9876
  host: localhost

apiEndpoints:

  api:
    host: localhost
    paths: '/ip'

  list-events:
    host: '*'
    paths: [ '/available-events', '/available-events/*']

  user-no-auth-required:
    host: '*'
    paths:
      - '/user/login'
      - '/user/signup'
      - '/user/*'

  #user-manager:
  #  host: localhost

  event-manager:
    host: '*'
    paths: ['/event', '/event/*', '/availablebettype/', '/availablebettype/*', '/stats/', '/stats/*', '/sport/','/sport/*']

  bet-manager:
    host: '*'
    paths: ['/bet/', '/bet/*', '/bettype', '/bettype/*']

serviceEndpoints:

  httpbin:
    url: 'https://httpbin.org'
  user-manager-service:
    url: ${MS_USER_MANAGER_URL} 
  bet-manager-service:
    url: ${MS_BET_MANAGER_URL} 
  event-manager-service:
    url: ${MS_EVENT_MANAGER_URL} 
  list-events-service:
    url: ${MS_LIST_EVENTS_URL} 

# Remover as que não estão a ser utilizadas mais tarde
# Apenas fazem alguma coisa se a sua acao for definida na pipeline
policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
  - jwt-db
pipelines:

  default:
    apiEndpoints:
      - api
    policies:
      - proxy:
        - action:
            serviceEndpoint: httpbin
            changeOrigin: true

  user-no-auth-required:
    apiEndpoints: user-no-auth-required
    policies:
      - proxy:
        - action:
            serviceEndpoint: user-manager-service
  
  event-manager-pipe:
    apiEndpoints: event-manager
    policies:
      - proxy:
        - action:
            serviceEndpoint: event-manager-service

  bet-manager-pipe:

    apiEndpoints: bet-manager
    policies:
      - proxy:
        - action:
            serviceEndpoint: bet-manager-service

  list-events-pipe:
    apiEndpoints: list-events
    policies:
      - proxy:
        - action:
            serviceEndpoint: list-events-service

#  user-manager-pipe:
#    apiEndpoints: user-manager-service
#    policies:
#      - jwt-db:
#        - action:
#                secret: "secret"
#      - expression:
#        - action:
#            jscode: 'res.send(req.query)'
#      - jwt:
#        - action:
#            checkCredentialExistence: false
#            jwtExtractor: ['authBearer', 'authScheme', 'header', 'query']
#       jscode: 'console.log("hello");'
#      - proxy:
#        - action:
#            serviceEndpoint: user-manager-service


